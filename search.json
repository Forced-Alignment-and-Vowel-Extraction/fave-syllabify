[
  {
    "objectID": "reference/index.html",
    "href": "reference/index.html",
    "title": "Function reference",
    "section": "",
    "text": "syllabify",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "reference/index.html#reference",
    "href": "reference/index.html#reference",
    "title": "Function reference",
    "section": "",
    "text": "syllabify",
    "crumbs": [
      "Function reference"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Fave Syllabify",
    "section": "",
    "text": "This is a work in progress."
  },
  {
    "objectID": "index.html#installation",
    "href": "index.html#installation",
    "title": "Fave Syllabify",
    "section": "Installation",
    "text": "Installation\n\nbash\n\npip install fave-syllabify"
  },
  {
    "objectID": "index.html#usage",
    "href": "index.html#usage",
    "title": "Fave Syllabify",
    "section": "Usage",
    "text": "Usage\nImport classes and functions\n\n\npython\n\nfrom aligned_textgrid import AlignedTextGrid, custom_classes\nfrom fave_syllabify import syllabify_tg\nfrom pathlib import Path\n\nRead in a textgrid\n\n\npython\n\ntg = AlignedTextGrid(\n    textgrid_path=Path(\n        \"data\",\n        \"josef-fruehwald_speaker.TextGrid\"\n    ),\n    entry_classes=custom_classes(\n        [\"Word\", \"Phone\"]\n    )\n)\n\nprint(tg)\n\nAlignedTextGrid with 1 groups named ['group_0'] each with [2] tiers. [['Word', 'Phone']]\n\n\nSyllabify the textgrid\n\n\npython\n\nsyllabify_tg(tg)\n\nprint(tg)\n\nAlignedTextGrid with 1 groups named ['group_0'] each with [4] tiers. [['Word', 'Syllable', 'SylPart', 'Phone']]\n\n\n\nExploring the syllabification\n\n\npython\n\nword_tier = tg.group_0.Word\nraindrops = word_tier[5]\n\nprint(raindrops.label)\n\nraindrops\n\n\nEach syllable is labelled with its stress.\n\n\npython\n\nprint([\n    syl.label \n    for syl in raindrops.contains\n])\n\n['syl-1', 'syl-2']\n\n\nEach syllable contains its constituent parts in a flat hierarchy (thereâ€™s no rhyme constituent).\n\n\npython\n\nsyl = raindrops.first.fol\nprint([\n    part.label\n    for part in syl.contains\n])\n\n['onset', 'nucleus', 'coda']\n\n\nEach constituent contains its relevant phone.\n\n\npython\n\nonset = syl.onset\nprint([\n    phone.label\n    for phone in onset\n])\n\n['D', 'R']"
  },
  {
    "objectID": "reference/syllabify.html",
    "href": "reference/syllabify.html",
    "title": "syllabify",
    "section": "",
    "text": "syllabify\n\n\n\n\n\nName\nDescription\n\n\n\n\nmake_syllable_constituents\nMake syllable constituents for a word interval\n\n\nsyllabify_tg\nSyllabify an entire AlignedTextGrid\n\n\nsyllabify_word\nSyllabify a single word\n\n\n\n\n\nsyllabify.make_syllable_constituents(word)\nMake syllable constituents for a word interval\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nword\naligned_textgrid.SequenceInterval\nA SequenceInterval for a word.\nrequired\n\n\n\n\n\n\n\nsyllabify.syllabify_tg(tg)\nSyllabify an entire AlignedTextGrid Args: tg (AlignedTextGrid): The textgrid to syllabify\n\n\n\nsyllabify.syllabify_word(word)\nSyllabify a single word\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nword\naligned_textgrid.SequenceInterval\nThe word Sequence Interval to syllabify\nrequired",
    "crumbs": [
      "Reference",
      "syllabify"
    ]
  },
  {
    "objectID": "reference/syllabify.html#functions",
    "href": "reference/syllabify.html#functions",
    "title": "syllabify",
    "section": "",
    "text": "Name\nDescription\n\n\n\n\nmake_syllable_constituents\nMake syllable constituents for a word interval\n\n\nsyllabify_tg\nSyllabify an entire AlignedTextGrid\n\n\nsyllabify_word\nSyllabify a single word\n\n\n\n\n\nsyllabify.make_syllable_constituents(word)\nMake syllable constituents for a word interval\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nword\naligned_textgrid.SequenceInterval\nA SequenceInterval for a word.\nrequired\n\n\n\n\n\n\n\nsyllabify.syllabify_tg(tg)\nSyllabify an entire AlignedTextGrid Args: tg (AlignedTextGrid): The textgrid to syllabify\n\n\n\nsyllabify.syllabify_word(word)\nSyllabify a single word\n\n\n\n\n\n\n\n\n\n\n\nName\nType\nDescription\nDefault\n\n\n\n\nword\naligned_textgrid.SequenceInterval\nThe word Sequence Interval to syllabify\nrequired",
    "crumbs": [
      "Reference",
      "syllabify"
    ]
  }
]