---
title: Fave Syllabify
filters: 
    - codeblocklabel
---

![](https://img.shields.io/badge/Lifecycle-Maturing-lightgreen@2x)
![PyPI version](https://badge.fury.io/py/fave-syllabify.svg)
[![Lint and Test](https://github.com/Forced-Alignment-and-Vowel-Extraction/fave-syllabify/actions/workflows/lint-and-test.yml/badge.svg)](https://github.com/Forced-Alignment-and-Vowel-Extraction/fave-syllabify/actions/workflows/lint-and-test.yml)
[![Build Docs](https://github.com/Forced-Alignment-and-Vowel-Extraction/fave-syllabify/actions/workflows/build_docs.yml/badge.svg)](https://forced-alignment-and-vowel-extraction.github.io/fave-syllabify/)
[![codecov](https://codecov.io/gh/Forced-Alignment-and-Vowel-Extraction/fave-syllabify/graph/badge.svg?token=WDBJ0O9P6L)](https://codecov.io/gh/Forced-Alignment-and-Vowel-Extraction/fave-syllabify)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.10708119.svg)](https://doi.org/10.5281/zenodo.10708119)

This is a work in progress.

## Installation

```bash
pip install fave-syllabify
```

## Usage

Import classes and functions
```{python}
from aligned_textgrid import AlignedTextGrid, custom_classes
from fave_syllabify import syllabify_tg
from pathlib import Path
```


Read in a textgrid
```{python}
tg = AlignedTextGrid(
    textgrid_path=Path(
        "data",
        "josef-fruehwald_speaker.TextGrid"
    ),
    entry_classes=custom_classes(
        ["Word", "Phone"]
    )
)

print(tg)
```

Syllabify the textgrid

```{python}
syllabify_tg(tg)

print(tg)
```

### Exploring the syllabification

```{python}
word_tier = tg.group_0.Word
raindrops = word_tier[5]

print(raindrops.label)
```

Each syllable is labelled with its stress.
```{python}
print([
    syl.label 
    for syl in raindrops.contains
])
```

Each syllable contains its constituent parts in a flat hierarchy (there's no rhyme constituent).

```{python}
syl = raindrops.first.fol
print([
    part.label
    for part in syl.contains
])
```

Each constituent contains its relevant phone.

```{python}
onset = syl.onset
print([
    phone.label
    for phone in onset
])
```

## Quickly syllabify and save the results

To quickly open, syllabify, and save the resulting textgrid (see also [the aligned-textgrid docs](https://forced-alignment-and-vowel-extraction.github.io/alignedTextGrid/usage/05_Outputs/00_to_textgrid.html))

```{python}
# Get the relevant imports
from aligned_textgrid import AlignedTextGrid, custom_classes
from fave_syllabify import syllabify_tg

# Load the Word and Phone aligned textgrid
tg = AlignedTextGrid(
    textgrid_path="data/josef-fruehwald_speaker.TextGrid",
    entry_classes=custom_classes(
        ["Word", "Phone"]
    )
)

# Syllabify (this modifies the tg object itself)
syllabify_tg(tg)

# Save the result
tg.save_textgrid(
    save_path = "data/syllabified.TextGrid"
)
```